October 31

Tasks

Install python on system

pycharm/ IDLE / jupyter notebook

IDLE /pycharm/Jupyter ===> IDE  3.8 python version
https://www.python.org/downloads/
   

Hackerrank.com ===> Online coding platform
https://www.hackerrank.com/

    
Github.com  ===> version controlled storage
https://github.com/


#variable
#data type
#operator
#data strucutre
#key words


November 1:

Task1:

#floor divison ?

print(7 // 4)
print(-7 // 4)
print(9 // 4)
print(-9 // 4)


Task2:

difference between interpreter and compiler


Task3:

difference between python 2 and python3 

Task4:


Rules for creating variables in python (4 - 5 rules)


November 2:

Taks1:

What's end / sep parameter in print function 
https://www.w3schools.com/python/ref_func_print.asp

November 3:

Task 0:
create float ===> convert in to int str bool
create int ==> conver in to float str bool
create bool ===> convert in to float int str
create str ===> convert in to int float bool

#int float bool str

a = 10.00001
print(int(a))

print(bool(a))

1. Get radius (int) and height (float) from user using input function
   Find the area of cylinder pi r*r h 
   Print area output in integer with formatted output

2. Area of the circel and circumference:

area pi r * r   cicr  2 pi r
collect radius from user as integer
print area (int) in formatted way
print circumference in string format in formatted way


3: Print function:
Read about print function and its parameters end, sep
Ref: https://www.geeksforgeeks.org/python-output-using-print-function/

4. round function 3.99999 ===> round function
4.98 ===> study about round function
Reference: https://www.w3schools.com/python/ref_func_round.asp

November 6:

Task: Manual calculation

a = "welcome*to#python&world!keep_learning^everyday"

print(a[20])
print(a[-16])
print(a[21])
print(a[-15])
print(a[23])
print(a[-13])
print(a[31])
print(a[-5])
print(a[22])
print(a[-14])
print(a[30])
print(a[-6])
print(a[11])
print(a[-25])

calculate neg and pos index for below values

*
p
&
^
%

November : 8: (Manual calculation)

a = "Information_technology"

print(a[10:15])
print(a[5:15])
print(a[10:])
print(a[-15:-20])
print(a[-20:-15])
print(a[-3:-5])
print(a[::2])
print(a[10:17:2])
print(a[10:100:2])
print(a[-20:-15:3])
print(a[10:20:10])
print(a[-20:-2:5])

Task2:

Information
technology
_ehooy
Ifr
Ioao

November 9 : (Manual calculation)

String:   "Information_Technology_world"
Tasks: Manual calculation

print(a[0:8])
print(a[0:-8])
print(a[-16:8])
print(a[-16:-8])
print(a[:8])
print(a[:-8])
print(a[9:16])
print(a[9:100])
print(a[9:])
print(a[-7:])
print(a[-7:16])
print(a[-7:100])
print(a[:])
print(a[2:5])
print(a[2:10])
print(a[2:5:1])
print(a[2:10:1])
print(a[-15:-8:1])
print(a[2:5:2])
print(a[2:10:2])
print(a[-15:-8:2])
print(a[2:5:3])
print(a[2:10:3])
print(a[-15:-8:3])
print(a[2:5])
print(a[2:10])
print(a[2:5:1])
print(a[2:10:1])
print(a[-15:-8:1])
print(a[2:5:2])
print(a[2:10:2])
print(a[-15:-8:2])
print(a[2:5:3])
print(a[2:10:3])
print(a[-15:-8:3])
print(a[-14:15:2])
print(a[12:15:1])
print(a[-16:10:5])
print(a[:10:2])
print(a[:-8:3])
print(a[:5:1])
print(a[2::2])
print(a[-10::2])
print(a[12::3])
print(a[13::6])
print(a[10::100])
print(a[2:10:1])
print(a[2:10:-1])
print(a[10:2:1])
print(a[10:2:-1])
print(a[-3:3:3])
print(a[3:-3:3])
print(a[-3:3:-3])
print(a[3:-3:-3])



a = "hello_world_python"

print(a[::3])
print(a[::-3])
print(a[2::3])
print(a[3::-3])
print(a[:5:-2])
print(a[:5:5])
print(a[::-1])
print(a[::1])
print(a[::5])
print(a[::-5])

"Innovative_minds_python_group"

#[-2:0:-1]
#[5:-5:5]
#[-5:5:-5]
#[5:-5:-5]
#[3:9:-1]
#[9:-10:-2]
#[2:-4:-4]
#[-4:2:-2]
#[0:-1:-3]
#[-3:3:6]
#[::-3]
#[::-2]
#[2:-2:-2]
#[2:-2:2]
#[5:-5:5]
#[3:-3:3]
#[::2]
#[::-5]


November 11:
Strings:

Task1:
    
#collect one string from user (input)
#identify middle letter of the string

a = "computer"

a = "django"

a = "groovyy"

Task2:
    
Get two strings from user  example: 
    "java" "groovy" ==> java6groovy4
   
   "pi" "mathematics"  ===> pi15mathematics2
    
Task3:
    
    Get one string from user
    
    a = "computer"
    
    convert middle character to upper case
    
    a = "computer" ==> compUter
    groovyy ==> groOvyy
    
Task4:
    
    what's your name ==> hackerrank
    
Task5:
    swapcase
    
Task6:
    Mutation
    
Task7:
    capitalize
    
 November 17:
 
 List

#Create an empty list (two ways)
#Concatenate with [5,6,7,8]
#add 8,9,1,5,6,7,8,1 elements to that list
#Find frequency of 8 (count)
#find the mean of the list
#find sum (List) + min + Max 
#Find median of the list
#remove duplicates from list and give output in the format of tuple


Advantages of tuples/set 


November 18:

Tuple

#Create two tuples (1,4,5,6,7,8) (5,6,7,8,9)
#Find the common elements between two tuples
#Concatenate both tuples and remove duplicates from tuple
#Find the index value of 9 (after concatenation)
#multiply above elements 3 times

Sets

#Create two empty sets
#update set1 with 7,8,9,1,2,3,4,5,0
#update set2 with 4,5,6,0
#check whether set2 is subset of set1 or no ?
#check whether both have common elements are no ?
#remove 8 from set 1 and set 2 ==> find the inferences
#discard 0 from set1 and set2 
#find collection of both sets ===> set1 and set2

Dictionary:

#create a dictionary
#{1:["english","maths","science"], 2:[10,20,30], 3:["bio-botany","bio-zoology","Algebra"]}
#Extract "bobtn" from above dictionary
#Extract "arbeg" from above dictionary
#print all keys in dictionary and convert it into tuple
#Find the average of all numbers available under key "2"

Difference between list tuple set dictionary


November 19:

Li1 = [2,3,4,5,[45,56,67,78,[111,222,333,[5555,3333,[10000,50000,"python","computer"],1111,7777,8888],444,555,666,777],89,23,34]]


5
56
222
50000
put
5555
7777
666
89
on
333
3333

Li1 = [1,2,3,4,5,[11,22,33,44,55,[111,222,333,444],6666,7777],7777]

Output Prediction 

print(Li1[5][0])
print(Li1[5][6])
print(Li1[5][-2])
print(Li1[5][7])
print(Li1[6])
print(Li1[5][5][1])

print(Li1[-2][-1])


print(Li1[2][2:4])



November 20:

November 20

Task1:

{1:["english","maths","science"], 2:[10,20,30], 3:["bio-botany","bio-zoology","Algebra"]}
#Extract "bobtn" from above dictionary
#Extract "arbeg" from above dictionary
#print all keys in dictionary and convert it into tuple
#Find the average of all numbers available under key "2"

Task2:

{"python":[1994,"interpreter","scripting","development",3], "java":[1992,"compiler","scripts","frontend/backend",10],"c":[1980,"core","scripting","Both",20]}

#extract 3
#Extract 1994
#extract backend
#split this "frontend/backend" with / and itentify index 0
#extract core

Task3:

collect one number from user, check whether the number is positive or negative
collect one number from user, check whether the number is even or odd
collect one string from user, check whether the string is palindrome or not


Task4:

a = [1,2,3,4,5,1,1,1,2,3,4,5,1]

#Remove duplicates from list a 
#convert it to list again


==============================================================================
If contions Tasks:

November 21 :

Task 1:
collect one number from user, check whether the number is positive or negative

Task2:
collect one number from user, check whether the number is even or odd

Task3:
collect one string from user, check whether the string is palindrome or not

Task4:
#Get one string from user
#extract middle letter of the string
#check whether middle letter is vowel or no

Task5:
#Get one string from user
#Find the middle letter
#find ascii value for the middle letter
#check whether ascii value is odd or even

Task6:
#get one string from user
#check whether length of the string is odd or even

Task7:
#Get one mark from student
#mark 0 to 100 otherwise invalid mark

#50 + PASS otherwise FAIL
#90 to 100 ===> A  ==> Even + Odd -
#80 to 89 ===> B
#70 to 79 ===> C
#60 to 69 ===> D
#50 to 59 ===> E

#0 to 49 ===> FAIL


#93 ===> A-
#99 ===> A-
#88 ====> B+

#78

#VALID MARK
#PASS MARK
#C+

Task8:
#hackerrank Write a function

Task9:
#hackerrank Python If-Else


Task10:
#two strings from user

#mathematics ===> 4 vowels
#science ==> 3 vowels

#both are equal count or not equal


Task11:


#get one integer from user (3 digit int only)
#armstrong or no (without using loops)

#153 ===> 1^3 + 5^3 + 3^3
#370 ===> 3^3 + 7^3 + 0^3
#371 ====> 3^3 + 7^3 + 1^3


Task12:

List #[123, 124, 125,130,131]
length of list odd or even

#References:

#https://www.guru99.com/if-loop-python-conditional-structures.html
#https://realpython.com/python-conditional-statements/
#https://www.w3schools.com/python/python_conditions.asp

Range function Task:
#Using Range function  print multiples of 5 from 0 to 75
#Using Range function  print multiples of 8 from 0 to 72

#Using Range function  print multiples of 5 from 75 to 0
#Using Range function  print multiples of 8 from 96 to 72


Pre study:

https://www.w3schools.com/python/python_for_loops.asp
https://www.w3schools.com/python/python_while_loops.asp


Loops Tasks:

Task1:

Study range function and for loop properly

https://www.w3schools.com/python/python_for_loops.asp
https://www.w3schools.com/python/python_while_loops.asp
https://github.com/DONTSAYCANT/python_may_june_batch/blob/main/Loops%20.ipynb

print(list(range(5)))
print(list(range(1,5)))
print(list(range(5,20)))
print(list(range(-5,5)))
print(list(range(10,100,10)))
print(list(range(10,0,-1)))
print(list(range(-5,5,3)))
print(list(range(10,100,5)))
print(list(range(10,0,-2)))

Task2:

Get list of strings from user
separate it in to two lists with vowles and non vowels 

["hi","ggg","hello","ravi","bbbb","zzz","yyyy"]

No of elements with vowel: 4
No of elements without vowel: 3


Task3:

Get list of strings from user
separate it two list (with same first letter and last letter and othr)

["garg", "kohli", "rohitr", "ishan", "dhoni","dad"]

No of elements with same first letter and last letter: 3
Other List: 3


Task4:

Get a list of numbers from user
separate it in to even number and odd number (you should create only one empty list)


Task5: 

fibonacci series

0,1,1,2,3,5,8,13,21,34,55,89,144

get one input from user: 5

[0,1,1,2,3]
3

user: 8

[0,1,1,2,3,5,8,13]
13

[0,1,1,2,3]

Task6:

No range function  

Multiples of 10 between 12 to 100 using while loop
Multiples of 8 between 120 to 20 using while loop
Multiples of 5 between 9 to 40 using while loop
Multiples of 8 between 300 to 200 using while loop

Task7:

#print all elements in the list using while loop

example for loop

for i in Li1:
    print(i)
    
1. calculate len
2. decrement one by one in while
    
Task8:

check whether a number is armstrong or not using while loop
Dont convert number to string 

Task9:

#Get one dynamic list from user

#10 [0,6,5,-3,4,5,3,-2,4,0]

#count ==> no of zeros, no of positive values, no of negative values, no of odd numbers, number of even numbers
#print the elements


Task10:

#two numbers from user 2 25
#2 
#3  fizz
#4
#15
#16
#25

#multiple of 3 ==> fizz
#multiple of 5 ==> buzz
#multiple of 15 ==> fizzbuzz
#Others ===> No fizz and buzz

#Including last number



Task11:

Factorial number

5 ==> 5 * 4 * 3* 2 * 1
120

Task12:

Get one number from user
Sum of digits

325 ==> 10

Task13:

sum of digits till it become single digit

Task14:

Product of digits
no need to convert to string

927 ==>  9* 2* 7 ==> 126

Task15:

#multiples of a number 

#Get one integer from the user
#9 ==> 1,3,9
#11 ==> 1,11
#25 ==> 1,5,25
#16 ===> 1,2,4,8,16

Task16:

#Anagram ===> check whether given string is anagram or no

#Two input strings
#pot
#top

#top
#pto


Task17:

get list of strings from user
categorize it in to even/odd length list using single loop

Task18:

Program to check a number is prime or no


Test 1 (50 marks == 25 MCQ + 5 pgms)
